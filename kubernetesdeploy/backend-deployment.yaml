apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetesdeploy/
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -o kubernetesdeploy/
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/test-net: "true"
        io.kompose.service: backend
    spec:
      containers:
      - args:
        - python3
        - manage.py
        - runserver
        - 0.0.0.0:8000
        env:
        - name: DJANGO_SETTINGS_MODULE
          value: backend.settings
        - name: ENDPOINT
          value: http://0.0.0.0:8000/api/requests-loan/
        - name: ENGINE
          value: django.db.backends.postgresql
        - name: HOST
          value: 127.0.0.1:5432
        - name: NAME
          value: DB_TEST
        - name: PASSWORD
          value: postgres
        - name: PORT
          value: "5432"
        - name: SECRET_KEY
          value: 7d@1v(esv5f75z=k25(6@md7q4reb^1w+7rpwgks
        - name: USER
          value: postgres
        image: jsmat/curso-devops:backendapp
        imagePullPolicy: ""
        name: backend
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /backend
          name: back-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: back-data
        persistentVolumeClaim:
          claimName: back-data
status: {}
